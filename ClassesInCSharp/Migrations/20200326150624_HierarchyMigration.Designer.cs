// <auto-generated />
using ClassesInCSharp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassesInCSharp.Migrations
{
    [DbContext(typeof(CarContext))]
    [Migration("20200326150624_HierarchyMigration")]
    partial class HierarchyMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassesInCSharp.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EngineVolume")
                        .HasColumnType("float");

                    b.Property<int>("Enginepower")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Car");
                });

            modelBuilder.Entity("ClassesInCSharp.Audi", b =>
                {
                    b.HasBaseType("ClassesInCSharp.Car");

                    b.Property<string>("AudiCaracteristic1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AudiCaracteristic2")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Audi");
                });

            modelBuilder.Entity("ClassesInCSharp.BMW", b =>
                {
                    b.HasBaseType("ClassesInCSharp.Car");

                    b.Property<string>("BMWCharacteristic1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BMWCharacteristic2")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("BMW");
                });
#pragma warning restore 612, 618
        }
    }
}
